plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "de.undercouch.download" version "5.3.0" // Assuming this plugin is still needed and compatible
}
//bundle as executable jar
bootJar {
	archiveFileName = 'kgds.jar'
	archiveBaseName = 'kgds'
	archiveVersion = '0.0.1-SNAPSHOT'
	archiveClassifier = null
}

group = 'com.kgds'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok - ensure compatibility with Java 21 and Spring Boot 3.3.x
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	testCompileOnly 'org.projectlombok:lombok:1.18.32'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
	testImplementation 'org.projectlombok:lombok:1.18.32'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//webclient for rest dependency
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// add gson
	implementation 'com.google.code.gson:gson:2.8.8'
	//add mysql jdbc driver
	implementation 'mysql:mysql-connector-java:8.0.26'
	// add spring boot jpa

	










}

tasks.named('test') {
	useJUnitPlatform()
}
//task downloadNewrelic(type: Download) {
//	mkdir 'newrelic'
//	src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
//	dest file('newrelic')
//}
//task unzipNewrelic(type: Copy) {
//	from zipTree(file('newrelic/newrelic-java.zip'))
//	into rootDir
//}

//task to build executable jar
//java -javaagent:newrelic/newrelic.jar -jar build/libs/kgds.jar
//task boot(type: JavaExec) {
//	mainClass = 'com.kgds.FiApplication'
//	classpath = sourceSets.main.runtimeClasspath
//	jvmArgs = ['-javaagent:newrelic/newrelic.jar']
//}
task run_app(type:Exec){
	dependsOn bootJar
	commandLine 'java', '-javaagent:newrelic/newrelic.jar', '-jar', 'build/libs/kgds.jar'
}
//create a gradle task to run npm start from via command line
task run_npm(type:Exec){
	commandLine 'npm', 'start'
}
//







